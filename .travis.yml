#sudo: required
language: bash
services:
  - docker

env:
  global:
    - g_var=globalvalue
    - BUILD_DIR="build/"
    - UPDATE_DIR="update/"
  matrix:
    - foo=1 bar=2 STAGE=build
    - foo=3 bar=4 STAGE=update

before_script:
  - whoami
  - docker version
  - cat /proc/version
  - df -h
  - free
  - echo $REGISTRY_PASSWORD | docker login -u $REGISTRY_USER --password-stdin

script:
  - echo $g_var
  - echo $foo && echo $bar
  - echo $STAGE

  - if [ "${STAGE}" = 'build' ]; then
      docker build 
        -t "alpinetest:latest"
        --label "stage=${STAGE}"
        "${BUILD_DIR}";
    elif [ "${STAGE}" = 'update' ]; then
      docker build 
        -t "alpinetest:latest"
        --label "stage=${STAGE}"
        "${UPDATE_DIR}";
    fi
  
  - docker images;
    docker inspect "alpinetest:latest" -f {{.Config.Labels}};
    docker inspect "alpinetest:latest" -f '{{.Config.Labels}}';
    docker inspect "alpinetest:latest" -f "{{.Config.Labels}}";
    docker inspect "alpinetest:latest" -f "{{.Config.Labels}}";

  #- docker build -t "$REGISTRY_USER/csgotest" build2/
  #- docker images
  #- travis_wait 20 docker push "$REGISTRY_USER/gametest"
  #- date

  #- REGISTRY_GOLDSOURCE='goldsourceservers'
  #- REGISTRY_SOURCE='sourceservers'
  #- docker pull "$REGISTRY_SOURCE/tf"
  #- docker images


after_script:
  - docker logout